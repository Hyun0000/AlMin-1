<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="CareerWork">
	<!-- 근무 일정 조회 -->
	<select id="selectWorkCal" resultType="hashmap" parameterType="string">
		SELECT WORK_MEMBER_NO, WORK_TITLE, WORK_COLOR, TO_CHAR(WORK_TIME_START, 'yyyy-mm-dd hh24:mi:ss') STARTTIME, TO_CHAR(WORK_TIME_END, 'yyyy-mm-dd hh24:mi:ss') ENDTIME, WORK_MONEY, WORK_TIME, WORK_TYPE
		FROM MEMBER_WORK WHERE WORK_MEMBER_ID = #{userId}
		<!-- 나중에  WHERE문 조건 추가해야한다.(지원, 면접 구분 위해) -->
	</select>
	
	<!-- 근무 일정 추가 -->
	<insert id="insertWorkCal" parameterType="MemberWork">
		INSERT INTO MEMBER_WORK VALUES (MEMBER_WORK_SEQUENCE.NEXTVAL, #{workMemberId}, '1', #{workTitle}, #{workTime}, #{workColor},
		TO_DATE(#{workTimeStart},'yyyy-mm-dd hh24:mi:ss'), TO_DATE(#{workTimeEnd},'yyyy-mm-dd hh24:mi:ss'), #{workMoney}, #{workType})
	</insert>
	
	<!-- 근무 일정 삭제 -->
	<delete id="deleteWorkCal" parameterType="MemberWork">
		DELETE FROM MEMBER_WORK WHERE WORK_MEMBER_ID = #{workMemberId} AND WORK_MEMBER_NO = #{workMemberNo}
	</delete>
	
	<!-- 근무 일정 수정 -->
	<update id="updateWorkCal" parameterType="MemberWork">
		UPDATE MEMBER_WORK SET WORK_TITLE = #{workTitle}, WORK_COLOR = #{workColor}, WORK_TIME_START = TO_DATE(#{workTimeStart},'yyyy-mm-dd hh24:mi:ss'),
		WORK_TIME_END = TO_DATE(#{workTimeEnd},'yyyy-mm-dd hh24:mi:ss'), WORK_MONEY = #{workMoney}, WORK_TIME = #{workTime}
		WHERE WORK_MEMBER_NO = #{workMemberNo} AND WORK_MEMBER_ID = #{workMemberId}
	</update>
	
	<!-- 차트에서 근무 경력 조회(년&월 기준) -->
	<select id="chartWork" resultType="hashmap" parameterType="map">
		SELECT WORK_TITLE, WORK_TIME, WORK_MONEY, WORK_MEMBER_ID, (EXTRACT(DAY FROM WORK_TIME_END) - EXTRACT(DAY FROM WORK_TIME_START) + 1) WORKDAY
		FROM MEMBER_WORK
		WHERE EXTRACT(YEAR FROM WORK_TIME_START) = #{year} AND EXTRACT(MONTH FROM WORK_TIME_START) = #{month} AND WORK_MEMBER_ID = #{userId}
	</select>
	
	<update id="dragWorkUpdate" parameterType="MemberWork">
		UPDATE MEMBER_WORK SET WORK_TIME_START = TO_DATE(#{workTimeStart},'yyyy-mm-dd hh24:mi:ss'), WORK_TIME_END = TO_DATE(#{workTimeEnd},'yyyy-mm-dd hh24:mi:ss')
		WHERE WORK_MEMBER_NO = #{workMemberNo}
	</update>
</mapper>
<!--
	private int workMemberNo;
	private String workMemberId; 
	private String workMemberType;
	private String workTitle;
	private String workColor;
	private String workTimeStart;
	private String workTimeEnd;
	private int workMoney;
	private String workType;
-->

<!--
	WORK_MEMBER_NO 		NUMBER 			PRIMARY KEY,
	WORK_MEMBER_ID 		varchar2(50), 	복합 외래키 지정(MEMBER)
	WORK_MEMBER_TYPE 	char(1) 		DEFAULT 1, 복합 외래키 지정(MEMBER)
	WORK_TITLE 			varchar2(50) 	NOT NULL,
	WORK_COLOR 			varchar2(10) 	DEFAULT '#0d6efd',
	WORK_TIME_START 	TIMESTAMP 		NOT NULL,
	WORK_TIME_END 		TIMESTAMP 		NOT NULL,
	WORK_MONEY 			NUMBER 			NOT NULL,  (시급)
	WORK_TYPE 			CHAR(1) 		CHECK(WORK_TYPE IN('W')),
	
	CONSTRAINT MEMBER_WORK_MEMBER_FK FOREIGN KEY(WORK_MEMBER_ID, WORK_MEMBER_TYPE)REFERENCES MEMBER(MEMBER_ID, MEMBER_TYPE) 복합 외래키 지정(MEMBER)
-->






